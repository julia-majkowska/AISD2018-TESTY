#!/usr/bin/env sh

pretty()
{
    if command -v 'tput' 1>/dev/null 2>&1
    then
        tput "$@"
    fi
}

BOLD=$(pretty bold)
RESET=$(pretty sgr0)
FAILED=$(pretty setaf 1)
ERROR=$(pretty setaf 4)
OK=$(pretty setaf 2)

bold()
{
    if [ -t 1 ]
    then
        printf "$BOLD"
        printf "$@"
        printf "$RESET"
    else
        printf "$@"
    fi
}

error()
{
    if [ -t 1 ]
    then
        printf "$BOLD"
        printf "$ERROR"
        printf "$@"
        printf "$RESET"
    else
        printf "$@"
    fi
}

failed()
{
    if [ -t 1 ]
    then
        printf "$BOLD"
        printf "$FAILED"
        printf "$@"
        printf "$RESET"
    else
        printf "$@"
    fi
}

ok()
{
    if [ -t 1 ]
    then
        printf "$BOLD"
        printf "$OK"
        printf "$@"
        printf "$RESET"
    else
        printf "$@"
    fi
}

all()
{
    program="$1"
    memory="$2"
    shift 2

    passed=0
    total=$#

    for testcase in "$@"
    do
        printf " * ${testcase%.in}"
        result=$(execute "$program" "$memory" "$testcase" 2>/dev/null)

        if [ $? -eq 0 ]
        then
            printf "$result" | diff -b -B - "${testcase%.in}.out" >/dev/null

            if [ $? -eq 0 ]
            then
                ok " Passed\n"
                passed=$((passed + 1))
            else
                failed " Wrong Answer\n"
            fi
        else
            error " Runtime error / Memory limit exceeded\n"
        fi
    done

    echo
    echo " ======================================"
    echo "  Passed $passed"
    echo "  Failed $((total - passed))"
    echo " ======================================"
    echo
}

execute()
{
    program="$1"
    memory="$2"
    testcase="$3"

    (
        ulimit -s unlimited
        (
            ulimit -v "$memory"
            "$PWD"/"${program}" < "${testcase}"
        )
    )
}

die()
{
    echo "$@"
    exit 1
}

usage()
{
    die "check [-m MEMORY] PROGRAM [TEST, ...]"
}

main()
{
    while getopts "m:eh" opt
    do
        case "${opt}" in
            "h") usage ;;
            "m") memory="${OPTARG}" ;;
            *) die "Option ${OPTARG} not implemented or undefined" ;;
        esac
    done
    shift $((OPTIND-1))

    if [ $# -lt 1 ]
    then
        usage
    fi

    program="$1"
    shift 1

    if [ ! -e "${program}" ]
    then
        die "Error: ${program} doesn't exist or isn't executable"
    fi

    if [ $# -lt 1 ]
    then
        all "$program" "${memory:-unlimited}" tests/*/*.in
    else
        all "$program" "${memory:-unlimited}" "$@"
    fi
}

main "$@"

# vim: set ts=4 sw=4 et:
