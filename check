#!/usr/bin/env sh

pretty()
{
    if command -v 'tput' &>/dev/null && [ -t 1 ]
    then
        tput "$@"
    fi
}

failed()
{
    pretty bold
    pretty setaf 1
    printf "$@"
    pretty sgr0
}

ok()
{
    pretty bold
    pretty setaf 2
    printf "$@"
    pretty sgr0
}

strong()
{
    pretty bold
    printf "$@"
    pretty sgr0
}

all()
{
    program="$1"
    memory="$2"
    shift 2

    passed=0
    total=$#

    for testcase in "$@"
    do
        result=$(execute "$program" "$memory" "$testcase")

        if [ $? -eq 0 ]
        then
            printf "$result" | diff -b -B - "${testcase%.in}.out" >/dev/null

            if [ $? -eq 0 ]
            then
                ok " ✓ "
                printf "$testcase\n"
                passed=$((passed + 1))
            else
                failed " ⨯ "
                printf "Wrong answer for $testcase\n"
            fi
        else
            failed " ⨯ "
            printf "Memory limit exceeded (?) for $testcase\n"
        fi
    done

    echo
    echo " ======================================"
    echo " Passed $passed"
    echo " Failed $((total - passed))"
    echo " ======================================"
}

execute()
{
    program="$1"
    memory="$2"
    testcase="$3"

    (
        ulimit -v "$memory"
        "$PWD"/"${program}" < "${testcase}"
    )
}

die()
{
    echo "$@"
    exit 1
}

usage()
{
    die "test-run [-m MEMORY] [-e] PROGRAM TEST [TEST...]"
}

main()
{
    while getopts "m:eh" opt
    do
        case "${opt}" in
            "e") echo 'parsing e'; ;;
            "h") echo 'parsing h'; ;;
			"m") memory="${OPTARG}" ;;
              *) echo 'undefined option' ;;
        esac
    done
    shift $((OPTIND-1))

    if [ $# -lt 1 ]
    then
        usage
    fi

    program="$1"
    shift 1

    if [ ! -e "${program}" ]
    then
        die "Error: ${program} doesn't exist or isn't executable"
    fi

    if [ $# -lt 1 ]
    then
        all "$program" "${memory:-unlimited}" tests/*.in
    else
        all "$program" "${memory:-unlimited}" "$@"
    fi
}

main "$@"

# vim: set ts=4 sw=4 et:
